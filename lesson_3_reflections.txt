When would you want to use a remote repository rather than keeping all your work local?

If you are working from another computer.  I did some coding while on vacation and had to use thumb drives to make sure the files on my
home computer were up to date.  I could use this to make sure things were up to date.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

I guess because you don't want things that are not ready to go up on the github without meaning to.  Also I like having control
of what is going on as opposed to automatic  processes.  Computers make too many mistakes. 

Clones are when you copy a repository from one system to another.  A fork is when you copy a repository on the same system (Github to github) and branch is when you create a copy to make changes to possible merge back later.

What is the benefit of having a copy of the last known state of the remote stored locally?
So that if you are working without a connection, you still have what was done as of the last time you were able to log on.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
You could just email each other different files or put it up on the cloud.  I would be a lot harder to track and if something 
does get messed up it would be a lot harder to go back and undo all the changes.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

You should make changes in a seperate branch when you are trying something new or you are not sure will work.  Then you will not affect the main branch.
if things work out then you can merge the two later.  also it allows many people to work on this open source code while keeping the main branch "Pure"